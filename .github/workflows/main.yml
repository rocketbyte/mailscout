name: MailScout CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-asyncio
        pip install types-beautifulsoup4 types-requests
        pip install pydantic beautifulsoup4 httpx
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    # - name: Check code formatting with Black
    #   run: |
    #     pip install black
    #     black --check src tests
    
    - name: Run tests with pytest
      run: |
        cd $(git rev-parse --show-toplevel)
        PYTHONPATH=$PWD pytest --cov=src
    
    - name: Run type checking with mypy
      run: |
        pip install mypy
        mypy --ignore-missing-imports --no-error-summary src || true # Temporarily ignore mypy errors until all files are fixed

  # build:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
  #   steps:
  #   - uses: actions/checkout@v3
    
  #   - name: Set up Python
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.10'
    
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install build
  #       if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
  #   - name: Build package
  #     run: |
  #       python -m build
    
  #   - name: Archive production artifacts
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: dist
  #       path: dist/